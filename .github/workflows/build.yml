name: Build docker image & deploy to ecs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Version
      id: version
      uses: paulhatch/semantic-version@v5.0.3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push docker image
      id: build-image
      shell: bash
      run: ./build-scripts/docker.sh $VERSION $VERSION_TAG
      env:
        VERSION: "${{ github.event_name == 'push' && steps.version.outputs.version || format('{0}-prerelease.{1}', steps.version.outputs.version, steps.version.outputs.increment) }}"
        VERSION_TAG: "${{ github.event_name == 'push' && steps.version.outputs.version_tag || '' }}"

    - name: Configure AWS credentials
      if: ${{ github.event_name == 'push' }}
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Fill in the new image ID in the Amazon ECS task definition
      if: ${{ github.event_name == 'push' }}
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ github.workspace }}/.github/workflows/task-definition.json
        container-name: tier-list-builder
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      if: ${{ github.event_name == 'push' }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: tier-list-builder
        cluster: ProjectsCluster
        wait-for-service-stability: true
        wait-for-minutes: 10
        force-new-deployment: true